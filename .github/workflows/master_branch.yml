name: google play release

on:
  push:
    branches:
      - master
    paths:
      - '!README.md'
      - '!art/**'
#  pull_request:
#    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      KEYSTORE_RELEASE: ${{ secrets.KEYSTORE_RELEASE }}
      STORE_ALIAS: ${{ secrets.STORE_ALIAS }}
      STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      KEYSTORE_STAGING: ${{ secrets.KEYSTORE_STAGING }}
      STORE_ALIAS_STAGING: ${{ secrets.STORE_ALIAS_STAGING }}
      STORE_PASSWORD_STAGING: ${{ secrets.STORE_PASSWORD_STAGING }}
      GOOGLE_PLAY_KEY_PUBLISH: ${{ secrets.GOOGLE_PLAY_KEY_PUBLISH }}
      ROLL_OUT_PERCENTAGE: ${{ secrets.ROLL_OUT_PERCENTAGE }}
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

#      - name: Build with Gradle
#        run: |
#          echo $KEYSTORE_STAGING > encoded
#          base64 -d encoded > keystore_staging
#          echo $KEYSTORE_RELEASE > encoded_release
#          base64 -d encoded_release > keystore.jks
#          echo $GOOGLE_PLAY_KEY_PUBLISH > google_play_key.json
#          echo $GOOGLE_SERVICES > app/google-services.json
#          chmod +x ./gradlew
#          ./gradlew assembleDebugAndroidTest
#          ./gradlew assembleDebug
#
#      - name: Unit Test
#        run: |
#          ./gradlew :app:test :data:test
#
#      - name: Instrumentation Test - Firebase Test Lab
#        run: |
#          export GRADLE_USER_HOME=$(pwd)/.gradle
#          yes | sdkmanager --licenses && yes | sdkmanager --update
#          wget --quiet --output-document=/tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz
#          mkdir -p /opt
#          tar zxf /tmp/google-cloud-sdk.tar.gz --directory /opt
#          /opt/google-cloud-sdk/install.sh --quiet
#          source /opt/google-cloud-sdk/path.bash.inc
#          gcloud components update
#          gcloud config set project $PROJECT_ID
#          echo $SERVICE_ACCOUNT > /tmp/service-account.json
#          gcloud auth activate-service-account --key-file /tmp/service-account.json
#          cp app/build/outputs/apk/debug/book_app-debug.apk ./book_app-debug.apk
#          cp app/build/outputs/apk/androidTest/debug/book_app-debug-androidTest.apk ./book_app-debug-androidTest.apk
#          yes | sdkmanager --licenses && yes | sdkmanager --update
#          gcloud firebase test android run   --type instrumentation   --app book_app-debug.apk   --test book_app-debug-androidTest.apk   --device model=walleye,version=28,locale=en,orientation=portrait
#
#      - name: Extract branch name
#        shell: bash
#        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
#        id: extract_branch
#        env:
#          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
#
#      - name: Slack Notification status build
#        uses: rtCamp/action-slack-notify@master
#        env:
#          SLACK_CHANNEL: derdiedas
#          SLACK_COLOR: '#3278BD'
#          SLACK_ICON: https://raw.githubusercontent.com/ciriti/BooksApp/master/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
#          SLACK_TITLE:  ${{ steps.extract_branch.outputs.branch }}
#          SLACK_MESSAGE: 'UI and unit tests have been executed successfully! :tada:'
#          SLACK_USERNAME: DeployerBot
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEB_HOOK_URL }}
#
#      - name: Fastlane build the release artifact
#        uses: maierj/fastlane-action@v1.4.0
#        with:
#          lane: 'assembleRelease'
#
#      - name: Upload the release artifact to Play Store
#        run: |
#          cp app/build/outputs/apk/release/*.apk app/build/outputs/apk/release/app-release.apk
#          fastlane supply --apk app/build/outputs/apk/release/app-release.apk --rollout $ROLL_OUT_PERCENTAGE
#
#      - name: Slack Notification - Release successfully published to Google Play Store
#        uses: rtCamp/action-slack-notify@master
#        env:
#          SLACK_CHANNEL: derdiedas
#          SLACK_COLOR: '#2EB886'
#          SLACK_ICON: https://raw.githubusercontent.com/ciriti/BooksApp/master/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
#          SLACK_TITLE:  Release artifact
#          SLACK_MESSAGE: "has been uploaded on Google Play Store. Initial roll-out at ${{ secrets.ROLL_OUT_PERCENTAGE }} :tada:"
#          SLACK_USERNAME: DeployerBot
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEB_HOOK_URL }}

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
import kotlin.String

/**
 * Generated by [gradle-kotlin-dsl-libs](https://github.com/jmfayard/gradle-kotlin-dsl-libs)
 *
 * Run again
 *   `$ ./gradlew syncLibs`
 * to update this file */
object Libs {
    /**
     * [core-testing website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val core_testing: String = "android.arch.core:core-testing:" + Versions.core_testing

    /**
     * [extensions website](https://developer.android.com/topic/libraries/architecture/index.html) */
    const val android_arch_lifecycle_extensions: String =
            "android.arch.lifecycle:extensions:" + Versions.android_arch_lifecycle_extensions

    /**
     * [appcompat website](https://developer.android.com/jetpack/androidx) */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * [cardview website](http://developer.android.com/tools/extras/support-library.html) */
    const val cardview: String = "androidx.cardview:cardview:" + Versions.cardview

    /**
     * [constraintlayout website](http://tools.android.com) */
    const val constraintlayout: String =
            "androidx.constraintlayout:constraintlayout:" + Versions.constraintlayout

    /**
     * [core-ktx website](http://developer.android.com/tools/extras/support-library.html) */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    /**
     * [swiperefreshlayout website](http://developer.android.com/tools/extras/support-library.html) */
    const val swiperefreshlayout: String =
            "androidx.swiperefreshlayout:swiperefreshlayout:" + Versions.swiperefreshlayout

    /**
     * [espresso-core website](https://developer.android.com/testing) */
    const val espresso_core: String =
            "androidx.test.espresso:espresso-core:" + Versions.espresso_core

    /**
     * [junit website](https://developer.android.com/testing) */
    const val androidx_test_ext_junit: String =
            "androidx.test.ext:junit:" + Versions.androidx_test_ext_junit

    /**
     * [uiautomator website](https://developer.android.com/testing) */
    const val uiautomator: String = "androidx.test.uiautomator:uiautomator:" + Versions.uiautomator

    /**
     * [rules website](https://developer.android.com/testing) */
    const val androidx_test_rules: String = "androidx.test:rules:" + Versions.androidx_test

    /**
     * [runner website](https://developer.android.com/testing) */
    const val androidx_test_runner: String = "androidx.test:runner:" + Versions.androidx_test

    /**
     * [gradle website](https://developer.android.com/studio) */
    const val com_android_tools_build_gradle: String =
            "com.android.tools.build:gradle:" + Versions.com_android_tools_build_gradle

    /**
     * [lint-gradle website](https://developer.android.com/studio) */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    const val play_services_maps: String =
            "com.google.android.gms:play-services-maps:" + Versions.play_services_maps

    /**
     * [material website](http://developer.android.com/tools/extras/support-library.html) */
    const val material: String = "com.google.android.material:material:" + Versions.material

    /**
     * [retrofit2-kotlin-coroutines-adapter website](https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter/) */
    const val retrofit2_kotlin_coroutines_adapter: String =
            "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:" + Versions.retrofit2_kotlin_coroutines_adapter

    /**
     * [logging-interceptor website](https://github.com/square/okhttp) */
    const val logging_interceptor: String =
            "com.squareup.okhttp3:logging-interceptor:" + Versions.com_squareup_okhttp3

    /**
     * [okhttp website](https://github.com/square/okhttp) */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.com_squareup_okhttp3

    /**
     * [converter-gson website](https://github.com/square/retrofit/) */
    const val converter_gson: String =
            "com.squareup.retrofit2:converter-gson:" + Versions.com_squareup_retrofit2

    /**
     * [retrofit website](https://github.com/square/retrofit/) */
    const val retrofit: String =
            "com.squareup.retrofit2:retrofit:" + Versions.com_squareup_retrofit2

    const val arrow_core: String = "io.arrow-kt:arrow-core:" + Versions.arrow_core

    /**
     * [mockk-android website](http://mockk.io) */
    const val mockk_android: String = "io.mockk:mockk-android:" + Versions.io_mockk

    /**
     * [mockk website](http://mockk.io) */
    const val mockk: String = "io.mockk:mockk:" + Versions.io_mockk

    const val jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin: String =
            "jmfayard.github.io.gradle-kotlin-dsl-libs:jmfayard.github.io.gradle-kotlin-dsl-libs.gradle.plugin:" + Versions.jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin

    /**
     * [junit website](http://junit.org) */
    const val junit_junit: String = "junit:junit:" + Versions.junit_junit

    /**
     * [kotlin-android-extensions-runtime website](https://kotlinlang.org/) */
    const val kotlin_android_extensions_runtime: String =
            "org.jetbrains.kotlin:kotlin-android-extensions-runtime:" + Versions.kotlin_android_extensions_runtime

    /**
     * [kotlin-android-extensions website](https://kotlinlang.org/) */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.kotlin_android_extensions

    /**
     * [kotlin-annotation-processing-gradle website](https://kotlinlang.org/) */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" + Versions.kotlin_annotation_processing_gradle

    /**
     * [kotlin-gradle-plugin website](https://kotlinlang.org/) */
    const val kotlin_gradle_plugin: String =
            "org.jetbrains.kotlin:kotlin-gradle-plugin:" + Versions.kotlin_gradle_plugin

    /**
     * [kotlin-stdlib-jdk7 website](https://kotlinlang.org/) */
    const val kotlin_stdlib_jdk7: String =
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:" + Versions.kotlin_stdlib_jdk7

    /**
     * [kotlinx-coroutines-android website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_android: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.kotlinx_coroutines_android

    const val koin_android_viewmodel: String =
            "org.koin:koin-android-viewmodel:" + Versions.org_koin

    const val koin_core: String = "org.koin:koin-core:" + Versions.org_koin

    const val koin_test: String = "org.koin:koin-test:" + Versions.org_koin
}
